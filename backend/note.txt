       ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
       ‚îÇ     User      ‚îÇ
       ‚îÇ (tr√¨nh duy·ªát) ‚îÇ
       ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
               ‚îÇ HTTP Request
               ‚ñº
        ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
        ‚îÇ     WAF       ‚îÇ
        ‚îÇ   (waf.py)    ‚îÇ
        ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
     - N·∫øu match rule trong rules.json ‚Üí block (403) v√† log l·∫°i v√†o logs/waf.log.
     - N·∫øu kh√¥ng match ‚Üí forward ƒë·∫øn backend_app.py (port 5001).

                ‚îÇ
                ‚ñº
         ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
         ‚îÇ Demo Backend  ‚îÇ
         ‚îÇ (backend_app) ‚îÇ
         ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò
                ‚îÇ
                ‚ñº
        ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
        ‚îÇ   Response    ‚îÇ
        ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò


   ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê
   ‚îÇ                    Admin Side (port 5002)                 ‚îÇ
   ‚îÇ                                                           ‚îÇ
   ‚îÇ   ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê       ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê               ‚îÇ
   ‚îÇ   ‚îÇ   Admin UI    ‚îÇ‚óÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚ñ∂‚îÇ  Admin API    ‚îÇ               ‚îÇ
   ‚îÇ   ‚îÇ (React/HTML)  ‚îÇ       ‚îÇ (admin_api.py)‚îÇ               ‚îÇ
   ‚îÇ   ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò       ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò               ‚îÇ
   ‚îÇ                                   ‚îÇ                       ‚îÇ
   ‚îÇ     GET/POST /rules               ‚îÇ  POST /analyze        ‚îÇ
   ‚îÇ     GET /logs                     ‚ñº                       ‚îÇ
   ‚îÇ                              ‚îå‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îê            ‚îÇ
   ‚îÇ                              ‚îÇ   Analyzer    ‚îÇ            ‚îÇ
   ‚îÇ                              ‚îÇ (analyzer.py) ‚îÇ            ‚îÇ
   ‚îÇ                              ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚î¨‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò            ‚îÇ
   ‚îÇ                                      ‚îÇ                    ‚îÇ
   ‚îÇ                                 Update rules.json         ‚îÇ
   ‚îÇ                                 (t·ª± ƒë·ªông sinh regex)      ‚îÇ
   ‚îî‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îò

üîë Gi·∫£i th√≠ch flow:

1. User g·ª≠i request ‚Üí ƒëi qua waf.py.
- N·∫øu match rule trong rules.json ‚Üí block (403) v√† log l·∫°i.
- N·∫øu kh√¥ng match ‚Üí forward ƒë·∫øn backend_app.py (port 5001).

2. WAF log l∆∞u v√†o logs/waf.log.

3. Admin API (5002) cho Admin UI g·ªçi:
- /rules: xem / th√™m / x√≥a rule.
- /logs: xem log m·ªõi nh·∫•t.
- /analyze: trigger analyzer ƒë·ªçc log v√† c·∫≠p nh·∫≠t rules.json.

4. Analyzer.py ƒë·ªçc log, t√¨m pattern t·∫•n c√¥ng ‚Üí sinh regex rule m·ªõi ‚Üí append v√†o rules.json.




--------------------------------------
C√°ch ch·∫°y (local, trong PyCharm)

Backend

1. T·∫°o virtualenv v√† c√†i dependency (v√≠ d·ª• trong backend/):

python -m venv venv
venv\Scripts\activate -> k√≠ch ho·∫°t v√†o ch·∫ø ƒë·ªô virtual environment (venv) c·ªßa Python. Tho√°t venv: deactivate
pip install -r requirements.txt
# n·∫øu b·∫°n ch∆∞a c√≥, requirements.txt v√≠ d·ª•:
# flask
# flask-cors


2. Ch·∫°y admin_api.py:

python admin_api.py

=> Admin API l·∫Øng nghe http://127.0.0.1:5002.


3. Ch·∫°y backend_app.py (port 5001) v√† waf.py (port 5000) nh∆∞ b·∫°n ƒë√£ c√≥:

python backend_app.py
python waf.py


Trong PyCharm:

B·∫°n c√≥ th·ªÉ t·∫°o 2 (ho·∫∑c 3) Run Configurations ki·ªÉu "Python" ƒë·ªÉ ch·∫°y backend_app.py, waf.py, admin_api.py. PyCharm t√≠ch h·ª£p virtualenv; ch·ªçn interpreter l√† venv c·ªßa project. Ch·∫°y t·ª´ng config trong c√°c tab run kh√°c nhau.

Vy:
C√≥ b·ªï sung c√°c quy t·∫Øc b√™n rules.json:
1. Quy t·∫Øc 3: Command Injection (Common Commands)
2. Quy t·∫Øc 4: XSS (Event Handlers and JavaScript URIs)
3. Quy t·∫Øc 5: SQL Injection (Additional Patterns)
4. Quy t·∫Øc 6: Directory Traversal
5. Quy t·∫Øc 7: Command Injection (Advanced Commands)
6. Quy t·∫Øc 8: Malicious User-Agent